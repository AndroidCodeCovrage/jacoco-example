// Apply JaCoCo plugin
apply plugin: 'jacoco'

// Set report configuration
configurations {
    jacocoReport
}

jacoco {
    version = '0.7.2.201409121644'
}

def coverageSourceDirs = [
        '../app/scr/main/java',
        '../module-01/main/java',
        '../module-02/main/java',
        '../module-core/main/java'
]

/**
 * Task that generates the JaCoCo report
 */
task jacocoReport(type: JacocoReport, dependsOn: "testDebug") {
    classDirectories  = fileTree(dir: '../app/build/intermediates/classes/debug', exclude: '**/R*.class')
    classDirectories += fileTree(dir: '../module-01/build/intermediates/classes/debug', exclude: '**/R*.class')
    classDirectories += fileTree(dir: '../module-02/build/intermediates/classes/debug', exclude: '**/R*.class')
    classDirectories += fileTree(dir: '../module-core/build/intermediates/classes/debug', exclude: '**/R*.class')

    jacocoClasspath = configurations.jacocoReport

    // Add execution data from all sub-projects
    executionData fileTree(project.projectDir).include("build/jacoco/*.exec")
    // Add source classes from all sub-projects
    sourceDirectories = files(coverageSourceDirs)

    reports {
        html {
            //noinspection GroovyAssignabilityCheck
            enabled true
            destination "build/reports/jacoco/test"
        }
        xml {
            //noinspection GroovyAssignabilityCheck
            enabled true
            destination "build/reports/jacoco/test/jacocoTestReport.xml"
        }
    }
}

dependencies {
    jacocoReport 'org.jacoco:org.jacoco.ant:0.7.2.201409121644'
}